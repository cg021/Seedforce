import { DiagnosticLevel } from '../../shared/types';
/**
 * TODO [W-5678919]: implement script to determine the next available error code
 * In the meantime, reference and the update the value at src/compiler/error-info/index.ts
 */
export declare const TemplateErrors: {
    INVALID_TEMPLATE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    OPTIONS_MUST_BE_OBJECT: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    UNKNOWN_IF_MODIFIER: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    UNKNOWN_OPTION_PROPERTY: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
};
export declare const ParserDiagnostics: {
    AMBIGUOUS_ATTRIBUTE_VALUE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    AMBIGUOUS_ATTRIBUTE_VALUE_STRING: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    BOOLEAN_ATTRIBUTE_FALSE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    BOOLEAN_ATTRIBUTE_TRUE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    COMPUTED_PROPERTY_ACCESS_NOT_ALLOWED: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    DIRECTIVE_SHOULD_BE_EXPRESSION: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    INVALID_ID_ATTRIBUTE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    INVALID_STATIC_ID_IN_ITERATION: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    DUPLICATE_ID_FOUND: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    EVENT_HANDLER_SHOULD_BE_EXPRESSION: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    FOR_EACH_AND_FOR_ITEM_DIRECTIVES_SHOULD_BE_TOGETHER: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    FOR_EACH_DIRECTIVE_SHOULD_BE_EXPRESSION: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    FOR_INDEX_DIRECTIVE_SHOULD_BE_STRING: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    FOR_ITEM_DIRECTIVE_SHOULD_BE_STRING: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    FORBIDDEN_IFRAME_SRCDOC_ATTRIBUTE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    FORBIDDEN_SVG_NAMESPACE_IN_TEMPLATE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    FORBIDDEN_MATHML_NAMESPACE_IN_TEMPLATE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    FORBIDDEN_TAG_ON_TEMPLATE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    GENERIC_PARSING_ERROR: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    IDENTIFIER_PARSING_ERROR: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    IF_DIRECTIVE_SHOULD_BE_EXPRESSION: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    INVALID_ATTRIBUTE_CASE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    INVALID_EVENT_NAME: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    INVALID_HTML_ATTRIBUTE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    INVALID_HTML_SYNTAX: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    INVALID_IDENTIFIER: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    INVALID_NODE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    INVALID_TABINDEX_ATTRIBUTE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    DEPRECATED_IS_ATTRIBUTE_CANNOT_BE_EXPRESSION: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    IS_ATTRIBUTE_NOT_SUPPORTED: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    KEY_ATTRIBUTE_SHOULD_BE_EXPRESSION: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    KEY_SHOULDNT_REFERENCE_FOR_EACH_INDEX: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    KEY_SHOULDNT_REFERENCE_ITERATOR_INDEX: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    MISSING_KEY_IN_ITERATOR: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    MISSING_ROOT_TEMPLATE_TAG: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    MODIFYING_ITERATORS_NOT_ALLOWED: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    MULTIPLE_EXPRESSIONS: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    MULTIPLE_ROOTS_FOUND: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    NAME_ON_SLOT_CANNOT_BE_EXPRESSION: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    NO_DIRECTIVE_FOUND_ON_TEMPLATE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    NO_MATCHING_CLOSING_TAGS: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    ROOT_TAG_SHOULD_BE_TEMPLATE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    ROOT_TEMPLATE_CANNOT_HAVE_ATTRIBUTES: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    SLOT_ATTRIBUTE_CANNOT_BE_EXPRESSION: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    SLOT_TAG_CANNOT_HAVE_DIRECTIVES: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    TEMPLATE_EXPRESSION_PARSING_ERROR: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    UNEXPECTED_IF_MODIFIER: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    LWC_DOM_INVALID_VALUE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    LWC_DOM_INVALID_CONTENTS: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    LWC_DOM_INVALID_CUSTOM_ELEMENT: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    LWC_DOM_INVALID_SLOT_ELEMENT: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    STYLE_TAG_NOT_ALLOWED_IN_TEMPLATE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    UNKNOWN_HTML_TAG_IN_TEMPLATE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    ATTRIBUTE_NAME_MUST_START_WITH_ALPHABETIC_OR_HYPHEN_CHARACTER: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    ATTRIBUTE_NAME_MUST_END_WITH_ALPHA_NUMERIC_CHARACTER: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    ATTRIBUTE_NAME_CANNOT_COMBINE_UNDERSCORE_WITH_SPECIAL_CHARS: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    UNKNOWN_LWC_DIRECTIVE: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    INVALID_OPTS_LWC_DYNAMIC: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    INVALID_LWC_DYNAMIC_ON_NATIVE_ELEMENT: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
    INVALID_LWC_DYNAMIC_LITERAL_PROP: {
        code: number;
        message: string;
        level: DiagnosticLevel;
        url: string;
    };
};
