import * as parse5 from 'parse5-with-errors';
import { CompilerDiagnostic } from '@lwc/errors';
interface NodeVisitor<N extends parse5.AST.Default.Node> {
    enter?: (node: N) => void;
    exit?: (node: N) => void;
}
interface Visitor {
    Comment?: NodeVisitor<parse5.AST.Default.CommentNode>;
    Text?: NodeVisitor<parse5.AST.Default.TextNode>;
    Element?: NodeVisitor<parse5.AST.Default.Element>;
}
export declare const treeAdapter: parse5.AST.TreeAdapter;
export declare function parseHTML(source: string): {
    fragment: parse5.AST.Default.DocumentFragment;
    errors: CompilerDiagnostic[];
};
export declare function traverseHTML(node: parse5.AST.Default.Node, visitor: Visitor): void;
export declare function getSource(source: string, location: parse5.MarkupData.Location): string;
export declare function cleanTextNode(value: string): string;
export declare function decodeTextContent(source: string): string;
export {};
