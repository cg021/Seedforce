import * as parse5 from 'parse5-with-errors';
import { IRElement } from '../shared/types';
export declare function isIdReferencingAttribute(attrName: string): boolean;
export declare function isAllowedFragOnlyUrlsXHTML(tagName: string, attrName: string, namespaceURI: string): boolean;
export declare function isSvgUseHref(tagName: string, attrName: string, namespaceURI: string): boolean;
export declare function isFragmentOnlyUrl(url: string): boolean;
export declare function normalizeAttributeValue(attr: parse5.AST.Default.Attribute, raw: string, tag: string): {
    value: string;
    escapedExpression: boolean;
};
export declare function attributeName(attr: parse5.AST.Default.Attribute): string;
export declare function getAttribute(el: IRElement, pattern: string | RegExp): parse5.AST.Default.Attribute | undefined;
export declare function removeAttribute(el: IRElement, pattern: string | RegExp): void;
export declare function isProhibitedIsAttribute(attrName: string): boolean;
export declare function isTabIndexAttribute(attrName: string): boolean;
export declare function isValidTabIndexAttributeValue(value: any): boolean;
export declare function isAriaOrDataOrFmkAttribute(attrName: string): boolean;
export declare function isAttribute(element: IRElement, attrName: string): boolean;
export declare function isValidHTMLAttribute(tagName: string, attrName: string): boolean;
export declare function attributeToPropertyName(element: IRElement, attrName: string): string;
